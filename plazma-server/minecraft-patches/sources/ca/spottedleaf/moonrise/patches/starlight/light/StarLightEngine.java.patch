--- a/ca/spottedleaf/moonrise/patches/starlight/light/StarLightEngine.java
+++ b/ca/spottedleaf/moonrise/patches/starlight/light/StarLightEngine.java
@@ -676,9 +_,9 @@
 
         for (int i = 0; i < sections.length; ++i) {
             if (sections[i] == null || sections[i].hasOnlyAir()) {
-                ret[i] = Boolean.TRUE;
+                ret[i] = true;
             } else {
-                ret[i] = Boolean.FALSE;
+                ret[i] = false;
             }
         }
 
@@ -754,9 +_,9 @@
                     continue;
                 }
                 final LevelChunkSection section = this.getChunkSection(chunkX, sectionIndex + this.minSection, chunkZ);
-                emptinessChanges[sectionIndex] = valueBoxed = section == null || section.hasOnlyAir() ? Boolean.TRUE : Boolean.FALSE;
+                emptinessChanges[sectionIndex] = valueBoxed = section == null || section.hasOnlyAir() ? true : false;
             }
-            chunkEmptinessMap[sectionIndex] = valueBoxed.booleanValue();
+            chunkEmptinessMap[sectionIndex] = valueBoxed;
         }
 
         // now init neighbour nibbles
@@ -767,7 +_,7 @@
                 continue;
             }
 
-            final boolean empty = valueBoxed.booleanValue();
+            final boolean empty = valueBoxed;
 
             if (empty) {
                 continue;
