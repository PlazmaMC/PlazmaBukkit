--- a/net/minecraft/world/item/enchantment/effects/ExplodeEffect.java
+++ b/net/minecraft/world/item/enchantment/effects/ExplodeEffect.java
@@ -38,13 +_,13 @@
 ) implements EnchantmentEntityEffect {
     public static final MapCodec<ExplodeEffect> CODEC = RecordCodecBuilder.mapCodec(
         instance -> instance.group(
-                Codec.BOOL.optionalFieldOf("attribute_to_user", Boolean.valueOf(false)).forGetter(ExplodeEffect::attributeToUser),
+                Codec.BOOL.optionalFieldOf("attribute_to_user", false).forGetter(ExplodeEffect::attributeToUser),
                 DamageType.CODEC.optionalFieldOf("damage_type").forGetter(ExplodeEffect::damageType),
                 LevelBasedValue.CODEC.optionalFieldOf("knockback_multiplier").forGetter(ExplodeEffect::knockbackMultiplier),
                 RegistryCodecs.homogeneousList(Registries.BLOCK).optionalFieldOf("immune_blocks").forGetter(ExplodeEffect::immuneBlocks),
                 Vec3.CODEC.optionalFieldOf("offset", Vec3.ZERO).forGetter(ExplodeEffect::offset),
                 LevelBasedValue.CODEC.fieldOf("radius").forGetter(ExplodeEffect::radius),
-                Codec.BOOL.optionalFieldOf("create_fire", Boolean.valueOf(false)).forGetter(ExplodeEffect::createFire),
+                Codec.BOOL.optionalFieldOf("create_fire", false).forGetter(ExplodeEffect::createFire),
                 Level.ExplosionInteraction.CODEC.fieldOf("block_interaction").forGetter(ExplodeEffect::blockInteraction),
                 ParticleTypes.CODEC.fieldOf("small_particle").forGetter(ExplodeEffect::smallParticle),
                 ParticleTypes.CODEC.fieldOf("large_particle").forGetter(ExplodeEffect::largeParticle),
