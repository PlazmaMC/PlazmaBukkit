--- a/net/minecraft/world/level/block/HugeMushroomBlock.java
+++ b/net/minecraft/world/level/block/HugeMushroomBlock.java
@@ -34,12 +_,12 @@
         this.registerDefaultState(
             this.stateDefinition
                 .any()
-                .setValue(NORTH, Boolean.valueOf(true))
-                .setValue(EAST, Boolean.valueOf(true))
-                .setValue(SOUTH, Boolean.valueOf(true))
-                .setValue(WEST, Boolean.valueOf(true))
-                .setValue(UP, Boolean.valueOf(true))
-                .setValue(DOWN, Boolean.valueOf(true))
+                .setValue(NORTH, true)
+                .setValue(EAST, true)
+                .setValue(SOUTH, true)
+                .setValue(WEST, true)
+                .setValue(UP, true)
+                .setValue(DOWN, true)
         );
     }
 
@@ -49,12 +_,12 @@
         BlockGetter level = context.getLevel();
         BlockPos clickedPos = context.getClickedPos();
         return this.defaultBlockState()
-            .setValue(DOWN, Boolean.valueOf(!level.getBlockState(clickedPos.below()).is(this)))
-            .setValue(UP, Boolean.valueOf(!level.getBlockState(clickedPos.above()).is(this)))
-            .setValue(NORTH, Boolean.valueOf(!level.getBlockState(clickedPos.north()).is(this)))
-            .setValue(EAST, Boolean.valueOf(!level.getBlockState(clickedPos.east()).is(this)))
-            .setValue(SOUTH, Boolean.valueOf(!level.getBlockState(clickedPos.south()).is(this)))
-            .setValue(WEST, Boolean.valueOf(!level.getBlockState(clickedPos.west()).is(this)));
+            .setValue(DOWN, !level.getBlockState(clickedPos.below()).is(this))
+            .setValue(UP, !level.getBlockState(clickedPos.above()).is(this))
+            .setValue(NORTH, !level.getBlockState(clickedPos.north()).is(this))
+            .setValue(EAST, !level.getBlockState(clickedPos.east()).is(this))
+            .setValue(SOUTH, !level.getBlockState(clickedPos.south()).is(this))
+            .setValue(WEST, !level.getBlockState(clickedPos.west()).is(this));
     }
 
     @Override
@@ -70,7 +_,7 @@
     ) {
         if (io.papermc.paper.configuration.GlobalConfiguration.get().blockUpdates.disableMushroomBlockUpdates) return state; // Paper - add option to disable block updates
         return neighborState.is(this)
-            ? state.setValue(PROPERTY_BY_DIRECTION.get(direction), Boolean.valueOf(false))
+            ? state.setValue(PROPERTY_BY_DIRECTION.get(direction), false)
             : super.updateShape(state, level, scheduledTickAccess, pos, direction, neighborPos, neighborState, random);
     }
 
