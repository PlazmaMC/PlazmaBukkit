--- a/net/minecraft/world/level/block/GrowingPlantHeadBlock.java
+++ b/net/minecraft/world/level/block/GrowingPlantHeadBlock.java
@@ -26,7 +_,7 @@
     ) {
         super(properties, growthDirection, shape, scheduleFluidTicks);
         this.growPerTickProbability = growPerTickProbability;
-        this.registerDefaultState(this.stateDefinition.any().setValue(AGE, Integer.valueOf(0)));
+        this.registerDefaultState(this.stateDefinition.any().setValue(AGE, 0));
     }
 
     @Override
@@ -34,7 +_,7 @@
 
     @Override
     public BlockState getStateForPlacement(RandomSource random) {
-        return this.defaultBlockState().setValue(AGE, Integer.valueOf(random.nextInt(getMaxGrowthAge()))); // Purpur - kelp, cave, weeping, and twisting configurable max growth age
+        return this.defaultBlockState().setValue(AGE, random.nextInt(getMaxGrowthAge())); // Purpur - kelp, cave, weeping, and twisting configurable max growth age
     }
 
     @Override
@@ -75,7 +_,7 @@
     }
 
     public BlockState getMaxAgeState(BlockState state) {
-        return state.setValue(AGE, Integer.valueOf(getMaxGrowthAge())); // Purpur - kelp, cave, weeping, and twisting configurable max growth age
+        return state.setValue(AGE, getMaxGrowthAge()); // Purpur - kelp, cave, weeping, and twisting configurable max growth age
     }
 
     public boolean isMaxAge(BlockState state) {
@@ -134,7 +_,7 @@
         int blocksToGrowWhenBonemealed = this.getBlocksToGrowWhenBonemealed(random);
 
         for (int i = 0; i < blocksToGrowWhenBonemealed && this.canGrowInto(level.getBlockState(blockPos)); i++) {
-            level.setBlockAndUpdate(blockPos, state.setValue(AGE, Integer.valueOf(min)));
+            level.setBlockAndUpdate(blockPos, state.setValue(AGE, min));
             blockPos = blockPos.relative(this.growthDirection);
             min = Math.min(min + 1, getMaxGrowthAge()); // Purpur - kelp, cave, weeping, and twisting configurable max growth age
         }
