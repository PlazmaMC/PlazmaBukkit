--- a/net/minecraft/world/level/block/SculkShriekerBlock.java
+++ b/net/minecraft/world/level/block/SculkShriekerBlock.java
@@ -48,9 +_,9 @@
         this.registerDefaultState(
             this.stateDefinition
                 .any()
-                .setValue(SHRIEKING, Boolean.valueOf(false))
-                .setValue(WATERLOGGED, Boolean.valueOf(false))
-                .setValue(CAN_SUMMON, Boolean.valueOf(false))
+                .setValue(SHRIEKING, false)
+                .setValue(WATERLOGGED, false)
+                .setValue(CAN_SUMMON, false)
         );
     }
 
@@ -86,7 +_,7 @@
     @Override
     protected void tick(BlockState state, ServerLevel level, BlockPos pos, RandomSource random) {
         if (state.getValue(SHRIEKING)) {
-            level.setBlock(pos, state.setValue(SHRIEKING, Boolean.valueOf(false)), 3);
+            level.setBlock(pos, state.setValue(SHRIEKING, false), 3);
             level.getBlockEntity(pos, BlockEntityType.SCULK_SHRIEKER).ifPresent(sculkShrieker -> sculkShrieker.tryRespond(level));
         }
     }
@@ -134,7 +_,7 @@
     @Override
     public BlockState getStateForPlacement(BlockPlaceContext context) {
         return this.defaultBlockState()
-            .setValue(WATERLOGGED, Boolean.valueOf(context.getLevel().getFluidState(context.getClickedPos()).getType() == Fluids.WATER)).setValue(SculkShriekerBlock.CAN_SUMMON, context.getLevel().purpurConfig.sculkShriekerCanSummonDefault); // Purpur - Config for sculk shrieker can_summon state
+            .setValue(WATERLOGGED, context.getLevel().getFluidState(context.getClickedPos()).getType() == Fluids.WATER).setValue(SculkShriekerBlock.CAN_SUMMON, context.getLevel().purpurConfig.sculkShriekerCanSummonDefault); // Purpur - Config for sculk shrieker can_summon state
     }
 
     @Override
