From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AlphaKR93 <dev@alpha93.kr>
Date: Sun, 14 Jan 2024 19:50:29 +0900
Subject: [PATCH] Use Gradle Version Catalogs


diff --git a/build.gradle.kts b/build.gradle.kts
index b0fd6c1804844f09428051952e3ac4e58f8c859c..2b668f8a5c245d024e03c94b7d8872448f1929cf 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -9,11 +9,13 @@ java {
     withJavadocJar()
 }
 
+/* // Plazma - Use Gradle Version Catalogs
 val annotationsVersion = "24.1.0"
 val bungeeCordChatVersion = "1.20-R0.2"
 val adventureVersion = "4.17.0"
 val slf4jVersion = "2.0.9"
 val log4jVersion = "2.17.1"
+ */ // Plazma - Use Gradle Version Catalogs
 val apiAndDocs: Configuration by configurations.creating {
     attributes {
         attribute(Category.CATEGORY_ATTRIBUTE, objects.named(Category.DOCUMENTATION))
@@ -39,58 +41,30 @@ abstract class MockitoAgentProvider : CommandLineArgumentProvider {
 // Paper end - configure mockito agent that is needed in newer java versions
 
 dependencies {
-    api("com.mojang:brigadier:1.2.9") // Paper - Brigadier command api
-    // api dependencies are listed transitively to API consumers
-    api("com.google.guava:guava:32.1.2-jre")
-    api("com.google.code.gson:gson:2.10.1")
-    // Paper start - adventure
-    api("net.md-5:bungeecord-chat:$bungeeCordChatVersion-deprecated+build.18") {
-        exclude("com.google.guava", "guava")
-    }
-    // Paper - adventure
-    api("org.yaml:snakeyaml:2.2")
-    api("org.joml:joml:1.10.5")
-    // Paper start
-    api("com.googlecode.json-simple:json-simple:1.1.1") {
-        isTransitive = false // includes junit
-    }
-    api("it.unimi.dsi:fastutil:8.5.6")
-    apiAndDocs(platform("net.kyori:adventure-bom:$adventureVersion"))
-    apiAndDocs("net.kyori:adventure-api")
-    apiAndDocs("net.kyori:adventure-text-minimessage")
-    apiAndDocs("net.kyori:adventure-text-serializer-gson")
-    apiAndDocs("net.kyori:adventure-text-serializer-legacy")
-    apiAndDocs("net.kyori:adventure-text-serializer-plain")
-    apiAndDocs("net.kyori:adventure-text-logger-slf4j")
-    api("org.apache.logging.log4j:log4j-api:$log4jVersion")
-    api("org.slf4j:slf4j-api:$slf4jVersion")
-    api("io.sentry:sentry:5.4.0") // Pufferfish
-
-    implementation("org.ow2.asm:asm:9.7.1")
-    implementation("org.ow2.asm:asm-commons:9.7.1")
-    // Paper end
-
-    api("org.apache.maven:maven-resolver-provider:3.9.6") // Paper - make API dependency for Paper Plugins
-    compileOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.9.18")
-    compileOnly("org.apache.maven.resolver:maven-resolver-transport-http:1.9.18")
-
-    val annotations = "org.jetbrains:annotations:$annotationsVersion" // Paper - we don't want Java 5 annotations...
-    compileOnly(annotations)
-    testCompileOnly(annotations)
-
-    // Paper start - add checker
-    val checkerQual = "org.checkerframework:checker-qual:3.33.0"
-    compileOnlyApi(checkerQual)
-    testCompileOnly(checkerQual)
-    // Paper end
-    api("org.jspecify:jspecify:1.0.0") // Paper - add jspecify
-
-    testImplementation("org.apache.commons:commons-lang3:3.12.0")
-    testImplementation("org.junit.jupiter:junit-jupiter:5.10.2")
-    testImplementation("org.hamcrest:hamcrest:2.2")
-    testImplementation("org.mockito:mockito-core:5.14.1")
-    testImplementation("org.ow2.asm:asm-tree:9.7.1")
-    mockitoAgent("org.mockito:mockito-core:5.14.1") { isTransitive = false } // Paper - configure mockito agent that is needed in newer java versions
+    // Plazma start - Use Gradle Version Catalogs
+    api(api.bundles.api)
+    api(api.bungeechat) { exclude("com.google.guava", "guava") }
+    api(common.snakeyaml)
+    api(api.jsonsimple) { isTransitive = false }
+    apiAndDocs(platform(common.adventure.bom))
+    apiAndDocs(common.bundles.adventure)
+    api(common.log4j.api)
+ 
+    implementation(common.bundles.asm)
+ 
+    api(common.mvn)
+    compileOnly(common.bundles.mvn)
+ 
+    compileOnly(api.annotations)
+    testCompileOnly(api.annotations)
+ 
+    compileOnlyApi(api.checkerqual)
+    testCompileOnly(api.checkerqual)
+ 
+    testImplementation(common.commons.lang3)
+    testImplementation(common.bundles.test)
+    mockitoAgent(common.mockito) { isTransitive = false }
+    // Plazma end
 }
 
 // Paper start
@@ -175,27 +149,25 @@ tasks.withType<Javadoc> {
     options.use()
     options.isDocFilesSubDirs = true
     options.links(
-        "https://guava.dev/releases/32.1.2-jre/api/docs/",
-        "https://javadoc.io/doc/org.yaml/snakeyaml/2.2/",
-        "https://javadoc.io/doc/org.jetbrains/annotations/$annotationsVersion/", // Paper - we don't want Java 5 annotations
-        // "https://javadoc.io/doc/net.md-5/bungeecord-chat/$bungeeCordChatVersion/", // Paper - don't link to bungee chat
-        // Paper start - add missing javadoc links
-        "https://javadoc.io/doc/org.joml/joml/1.10.5/index.html",
-        "https://www.javadoc.io/doc/com.google.code.gson/gson/2.10.1",
-        "https://jspecify.dev/docs/api/",
-        // Paper end
-        // Paper start
-        "https://jd.advntr.dev/api/$adventureVersion/",
-        "https://jd.advntr.dev/key/$adventureVersion/",
-        "https://jd.advntr.dev/text-minimessage/$adventureVersion/",
-        "https://jd.advntr.dev/text-serializer-gson/$adventureVersion/",
-        "https://jd.advntr.dev/text-serializer-legacy/$adventureVersion/",
-        "https://jd.advntr.dev/text-serializer-plain/$adventureVersion/",
-        "https://jd.advntr.dev/text-logger-slf4j/$adventureVersion/",
-        "https://javadoc.io/doc/org.slf4j/slf4j-api/$slf4jVersion/",
-        "https://javadoc.io/doc/org.apache.logging.log4j/log4j-api/$log4jVersion/",
-        // Paper end
-        "https://javadoc.io/doc/org.apache.maven.resolver/maven-resolver-api/1.7.3", // Paper
+        // Plazma start - Use Gradle Version Catalogs
+        "https://guava.dev/releases/${api.guava.orNull?.version}/api/docs/",
+        "https://javadoc.io/doc/org.yaml/snakeyaml/${common.snakeyaml.orNull?.version}/",
+        "https://javadoc.io/doc/org.jetbrains/annotations/${api.annotations.orNull?.version}/",
+        "https://javadoc.io/doc/org.joml/joml/${api.joml.orNull?.version}/index.html",
+        "https://www.javadoc.io/doc/com.google.code.gson/gson/${api.gson.orNull?.version}",
+        "https://jspecify.dev/docs/api/", //diff on change
+        "https://jd.advntr.dev/api/${common.adventure.api.orNull?.version}/",
+        "https://jd.advntr.dev/key/${common.adventure.api.orNull?.version}/",
+        "https://jd.advntr.dev/text-minimessage/${common.adventure.api.orNull?.version}/",
+        "https://jd.advntr.dev/text-serializer-gson/${common.adventure.api.orNull?.version}/",
+        "https://jd.advntr.dev/text-serializer-legacy/${common.adventure.api.orNull?.version}/",
+        "https://jd.advntr.dev/text-serializer-plain/${common.adventure.api.orNull?.version}/",
+        "https://jd.advntr.dev/text-logger-slf4j/${common.adventure.api.orNull?.version}/",
+        "https://javadoc.io/doc/org.yaml/snakeyaml/${common.snakeyaml.orNull?.version}/",
+        "https://javadoc.io/doc/org.slf4j/slf4j-api/${api.slf4j.orNull?.version}/",
+        "https://javadoc.io/doc/org.apache.logging.log4j/log4j-api/${common.log4j.api.orNull?.version}/",
+        "https://javadoc.io/doc/org.apache.maven.resolver/maven-resolver-api/${common.mvn.connector.orNull?.version}",
+        // Plazma end
     )
     options.tags("apiNote:a:API Note:")
 
