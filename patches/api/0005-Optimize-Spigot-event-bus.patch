From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: IPECTER <ipectert@gmail.com>
Date: Wed, 6 Sep 2023 15:04:25 +0900
Subject: [PATCH] Optimize Spigot event bus


diff --git a/src/main/java/org/bukkit/event/Event.java b/src/main/java/org/bukkit/event/Event.java
index 8ec56cd6b8e0f5c5dd8c7c88b4671e18dcf109d0..f1b3559bf9d2023ca59330c65e6e34714759dd9d 100644
--- a/src/main/java/org/bukkit/event/Event.java
+++ b/src/main/java/org/bukkit/event/Event.java
@@ -14,7 +14,7 @@ import org.jetbrains.annotations.NotNull;
  */
 public abstract class Event {
     private String name;
-    private final boolean async;
+    private final net.kyori.adventure.util.TriState async; // Plazma - Optimize spigot event bus
 
     /**
      * The default constructor is defined for cleaner code. This constructor
@@ -32,9 +32,35 @@ public abstract class Event {
      *     by default from default constructor
      */
     public Event(boolean isAsync) {
+        this(net.kyori.adventure.util.TriState.byBoolean(isAsync)); // Plazma - Optimize spigot event bus
+    }
+
+    // Plazma start - Optimize spigot event bus
+    /**
+     * This constructor is used to explicitly declare an event as synchronous
+     * or asynchronous or potentially unset.
+     *
+     * @param isAsync true indicates the event will fire asynchronously, false
+     *                by default from default constructor, unset indicates that the event may be called on either the server thread or off the server
+     *                thread.
+     */
+    public Event(@NotNull final net.kyori.adventure.util.TriState isAsync) {
         this.async = isAsync;
     }
 
+    /**
+     * Returns a tristate that, when resolving to true or false, has the exact indications defined by {@link #isAsynchronous()}.
+     * <p>
+     * If the tristate resolves to NOT_SET, the event may or may not have been fired off the main thread, meaning a plugin would have
+     * to validate what thread the spigot event bus was called on.
+     *
+     * @return the tristate enum.
+     */
+    public final @NotNull net.kyori.adventure.util.TriState asynchronous() {
+        return this.async;
+    }
+    // Plazma end - Optimize Spigot event bus
+
     // Paper start
     /**
      * Calls the event and tests if cancelled.
@@ -92,7 +118,7 @@ public abstract class Event {
      * @return false by default, true if the event fires asynchronously
      */
     public final boolean isAsynchronous() {
-        return async;
+        return this.async == net.kyori.adventure.util.TriState.TRUE; // Plazma - Optimize spigot event bus
     }
 
     public enum Result {
diff --git a/src/main/java/org/bukkit/plugin/RegisteredListener.java b/src/main/java/org/bukkit/plugin/RegisteredListener.java
index 3b3d9642a8d63798dc28f2f8df77f0466451cbff..0702e1692f7e671188ac18e22ca29f369b0b6352 100644
--- a/src/main/java/org/bukkit/plugin/RegisteredListener.java
+++ b/src/main/java/org/bukkit/plugin/RegisteredListener.java
@@ -62,8 +62,8 @@ public class RegisteredListener {
      * @throws EventException If an event handler throws an exception.
      */
     public void callEvent(@NotNull final Event event) throws EventException {
-        if (event instanceof Cancellable) {
-            if (((Cancellable) event).isCancelled() && isIgnoringCancelled()) {
+        if (isIgnoringCancelled()) { // Plazma - Optimize spigot event bus
+            if (event instanceof Cancellable cancellable && cancellable.isCancelled()) { // Plazma - Optimize spigot event bus
                 return;
             }
         }
